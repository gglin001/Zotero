/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- *//* this file is version 1.0 revised 6-1-2016 by Dave *//* History */
/* vim: set ts=2 et sw=2 tw=80: */

/*
 * Depending on your local configuration, this file should be installed in either:
 *
 * <mathjax>/extensions/TeX
 * <mathjax>/unpacked/extensions/TeX
 *
 *
 * To reference this file from default.js, add to the extensions array, as in:
 *
 * extensions: ["tex2jax.js","TeX/AMSmath.js","TeX/AMSsymbols.js","TeX/ieeemacros.js"],
 *
 */

MathJax.Extension["TeX/euler_ieee"] = {
  version: "1.0"
};
////  Add font macros to TeX input jax//MathJax.Hub.Register.StartupHook("TeX Jax Ready",function () {  var MACROS = MathJax.InputJax.TeX.Definitions.macros;  MACROS.eurRFont = ['SetFont','-tex-eulerR'];  MACROS.eurFFont = ['SetFont','-tex-eulerF'];  MACROS.eurSFont = ['SetFont','-tex-eulerS'];  MACROS.matheur = ['Macro','{\\eurRFont #1}',1];  MACROS.matheuf = ['Macro','{\\eurFFont #1}',1];  MACROS.matheus = ['Macro','{\\eurSFont #1}',1];});////  Modify HTML-CSS output to handle loading the Neo-Euler fonts//MathJax.Hub.Register.StartupHook("HTML-CSS Jax Startup",function () {  var HTMLCSS = MathJax.OutputJax["HTML-CSS"];  var FONTDATA = HTMLCSS.FONTDATA;  var RANGELENGTH = FONTDATA.RANGES.length;  var WEBFONT = "otf";  if (MathJax.Hub.Browser.isMSIE) WEBFONT = ((document.documentMode||0) >= 9 ? "woff" : "eot");  //  //  Add the data needed for the Euler fonts  //  FONTDATA.DIRS = {};  FONTDATA.FONTS["NeoEulerMathJax_Main"] = "../Neo-Euler/Main/Regular/Main.js";  FONTDATA.DIRS["NeoEulerMathJax_Main"] = "../Neo-Euler/Main/Regular";  FONTDATA.FONTS["NeoEulerMathJax_Fraktur"] = "../Neo-Euler/Fraktur/Regular/Main.js";  FONTDATA.DIRS["NeoEulerMathJax_Fraktur"] = "../Neo-Euler/Fraktur/Regular";  FONTDATA.FONTS["NeoEulerMathJax_Script"] = "../Neo-Euler/Script/Regular/Main.js";  FONTDATA.DIRS["NeoEulerMathJax_Script"] = "../Neo-Euler/Script/Regular";  FONTDATA.VARIANT["-tex-eulerR"] = {fonts: ["NeoEulerMathJax_Main"]};  FONTDATA.VARIANT["-tex-eulerF"] = {    fonts: ["NeoEulerMathJax_Fraktur"],    offsetE: 0x1D504,    remap: {0x1D506: 0x212D, 0x1D50B: 0x210C, 0x1D50C: 0x2111, 0x1D515: 0x211C, 0x1D51D: 0x2128}  };  FONTDATA.VARIANT["-tex-eulerS"] = {    fonts: ["NeoEulerMathJax_Script"], italic:true,    offsetE: 0x1D49C,    remap: {0x1D49D: 0x212C, 0x1D4A0: 0x2130, 0x1D4A1: 0x2131, 0x1D4A3: 0x210B, 0x1D4A4: 0x2110, 0x1D4A7: 0x2112, 0x1D4A8: 0x2133, 0x1D4AD: 0x211B, 0x1D4BA: 0x212F, 0x1D4BC: 0x210A, 0x1D4C4: 0x2134}  };  //  //  Override HTMLCSS.initFont to handle the Neo-Euler fonts  //   (add the RANGES when the first Neo-Euler font is loaded).  //  var INITFONT = HTMLCSS.initFont;  HTMLCSS.initFont = function (name) {    var FONTS = FONTDATA.FONTS;    if (name.match(/^NeoEuler/) && FONTS[name]) {      if (FONTDATA.RANGES.length === RANGELENGTH) {        FONTDATA.RANGES.push(          {name: "alphaE", low: 0x61, high: 0x7A, offset: "E", add: 26},          {name: "AlphaE", low: 0x41, high: 0x5A, offset: "E"}        );      }      FONTS[name].directory = FONTDATA.DIRS[name];      HTMLCSS.lastDir = HTMLCSS.fontDir + "/" + FONTS[name].directory;      var allow = HTMLCSS.allowWebFonts;      if (!HTMLCSS.allowWebFonts) HTMLCSS.allowWebFonts = WEBFONT;      var result = INITFONT.apply(this,arguments);      HTMLCSS.allowWebFonts = allow;      return result;    }    return INITFONT.apply(this,arguments);  };  //  //  Override HTMLCSS.Font.fontFace to produce the correct  //    @font-face directives for Neo-Euler fonts  //  var FONTFACE = HTMLCSS.Font.fontFace;  HTMLCSS.Font.fontFace = function (name) {    if (name.match(/^NeoEuler/)) {      var dir = HTMLCSS.webfontDir, allow = HTMLCSS.allowWebFonts;      HTMLCSS.webfontDir = dir.replace(/\/[^\/]*$/,"/Neo-Euler");      HTMLCSS.allowWebFonts = WEBFONT;      var result = FONTFACE.apply(this,arguments);      HTMLCSS.webfontDir = dir;      HTMLCSS.allowWebFonts = allow;      return result;    } else {      return FONTFACE.apply(this,arguments);    }  };  //  //  Override loadComplete to handle the lastDir, if any, for Neo-Euler fonts  //  var LOADCOMPLETE = MathJax.Ajax.loadComplete;  MathJax.Ajax.loadComplete = function (file) {    if (HTMLCSS.lastDir) file = HTMLCSS.lastDir + file.replace(/.*\//,"/");    HTMLCSS.lastDir = null;    return LOADCOMPLETE.call(this,file);  };});////  Modify SVG output to handle loading the Neo-Euler fonts//MathJax.Hub.Register.StartupHook("SVG Jax Startup",function () {  var SVG = MathJax.OutputJax.SVG;  var FONTDATA = MathJax.OutputJax.SVG.FONTDATA;  var RANGES = SVG.FONTDATA.RANGES;  var RANGELENGTH = RANGES.length;  //  //  Add the needed Euler fonts  //  FONTDATA.FONTS["NeoEulerMathJax_Main"] = "../Neo-Euler/Main/Regular/Main.js";  FONTDATA.FONTS["NeoEulerMathJax_Fraktur"] = "../Neo-Euler/Fraktur/Regular/Main.js";  FONTDATA.FONTS["NeoEulerMathJax_Script"] = "../Neo-Euler/Script/Regular/Main.js";  FONTDATA.VARIANT["-tex-eulerR"] = {fonts: ["NeoEulerMathJax_Main"]};  FONTDATA.VARIANT["-tex-eulerF"] = {    fonts: ["NeoEulerMathJax_Fraktur"],    offsetE: 0x1D504,    remap: {0x1D506: 0x212D, 0x1D50B: 0x210C, 0x1D50C: 0x2111, 0x1D515: 0x211C, 0x1D51D: 0x2128}  };  FONTDATA.VARIANT["-tex-eulerS"] = {    fonts: ["NeoEulerMathJax_Script"], italic:true,    offsetE: 0x1D49C,    remap: {0x1D49D: 0x212C, 0x1D4A0: 0x2130, 0x1D4A1: 0x2131, 0x1D4A3: 0x210B, 0x1D4A4: 0x2110, 0x1D4A7: 0x2112, 0x1D4A8: 0x2133, 0x1D4AD: 0x211B, 0x1D4BA: 0x212F, 0x1D4BC: 0x210A, 0x1D4C4: 0x2134}  };  //  //  Override SVG.loadFont to save the last font loaded  //    (so loadComplete can respond to the correct font)  //  var LOADFONT = SVG.loadFont;  SVG.loadFont = function (file) {    if (file.substr(0,13) === "../Neo-Euler/") SVG.lastFont = SVG.fontDir + "/" + file;    return LOADFONT.call(this,file);  }  //  //  Override loadComplete to handle the lastFont, if any  //  When the first Euler font is loaded, add the needed RANGES.  //  var LOADCOMPLETE = MathJax.Ajax.loadComplete;  MathJax.Ajax.loadComplete = function (file) {    if (SVG.lastFont) {      file = SVG.lastFont;      if (RANGES.length === RANGELENGTH) {        RANGES.push(          {name: "alphaE", low: 0x61, high: 0x7A, offset: "E", add: 26},          {name: "AlphaE", low: 0x41, high: 0x5A, offset: "E"}        );      }    }    SVG.lastFont = null;    return LOADCOMPLETE.call(this,file);  };});
MathJax.Ajax.loadComplete("[MathJax]/extensions/TeX/euler_ieee.js");
